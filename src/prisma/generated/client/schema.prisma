// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated/client"
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL")
  url      = "postgresql://postgres:1234@localhost:5432/financian?schema=public"
}

model User {
  id          String   @id @default(uuid())
  fullName    String
  email       String   @unique
  password    String
  phoneNumber String
  imageUrl    String
  isVerified  Boolean  @default(false)
  createdAt   DateTime @default(now())

  // relations
  orders   Order[]   @relation("UserOrders")
  comments Comment[]
}

model Video {
  id       String @id @default(uuid())
  filename String
  courseId String
  course   Course @relation(fields: [courseId], references: [id])
}

model Course {
  id          String   @id @default(uuid())
  title       String
  description String
  price       Float
  rating      Float
  category    String
  thumbnail   String
  duration    Int
  videoCount  Int
  videos      Video[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // relations
  orders   Order[]   @relation("CourseOrders")
  comments Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())

  // relations
  course   Course @relation(fields: [courseId], references: [id])
  courseId String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  courseId  String
  createdAt DateTime @default(now())

  // relations
  user   User   @relation(fields: [userId], references: [id], name: "UserOrders")
  course Course @relation(fields: [courseId], references: [id], name: "CourseOrders")
}
